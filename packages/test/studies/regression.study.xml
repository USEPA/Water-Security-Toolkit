<experimental-study name="regression">
  <tags>
    <tag>none</tag>
  </tags>

  <experiment name="GenerateTso">
    <factors>
      <factor name="tsg_file">
        <level>"-tsg ../../test1.tsg -tsi ../../test1.tsi"</level>
      </factor>
      <factor name="tso_file">
        <level>"-tso ../test1.tso"</level>
      </factor>
      <factor name="epanet_file">
        <level>"../../Net3.inp Net3.out"</level>
      </factor>
    </factors>
    <controls>
       <executable>python sp_test -tso</executable>
    </controls>
  </experiment>

  <experiment name="tso2Impact">
    <factors>
      <factor name="impact_prefix">
        <level>"../test1 ../test1.tso"</level>
      </factor>
      <factor name="objectives">
        <level>"-mc -vc -td -nfd -ec -epanetin ../../Net3.inp"</level>
      </factor>
    </factors>
    <controls>
       <executable>python sp_test -impact</executable>
    </controls>
  </experiment>

  <experiment name="scenarioAggr">
    <factors>
      <factor name="num_events">
        <level>"--numEvents=236"</level>
      </factor>
      <factor name="scenario_aggr">
        <level>"../test1_mc.impact"</level>
      </factor>
    </factors>
    <controls>
       <executable>python sp_test -scenario_aggr</executable>
    </controls>
  </experiment>

  <experiment name="test1a"> 
    <factors>
      <factor name="constant_options">
        <level>network=test1 --impact-dir=..</level>
      </factor>
      <factor name="variable_options">
        <!-- test1a - this basic mc_mean -->
        <level>objective=mc_mean ub=ns,5 solver=pico _value=21781.98987</level>
        <!-- test1a_l - lagrangian -->
        <level>objective=mc_mean ub=ns,5 solver=lagrangian _value=21781.9899</level>
        <!-- test1f - this tests costs files -->
        <level>objective=mc_mean ub=cost,20 costs=../../test1-id-costs solver=pico _value=24635.28198</level>
        <!-- test1g - this tests the Excel format -->
        <level>objective=mc_mean ub=cost,20 costs=../../test1-id-costs solver=pico format=test1g.xls _value=24635.28198</level>
        <!-- test1h - this tests the ec measure and thresholding -->
        <level>objective=ec_mean ub=ns,5 threshold=ec,20000.0 solver=pico _value=3175.57923</level>
        <!-- test1i - this tests mc_worst -->
        <level>objective=mc_worst ub=ns,5 solver=pico _value=144271</level>
        <!-- test1j - this tests mc_cvar -->
        <level>objective=mc_cvar ub=ns,5 solver=pico gamma=0.05 _value=144271</level>
        <!-- test1k - this tests mc_cvar -->
        <!-- <level>objective=mc_cvar ub=ns,5 solver=pico gamma=0.01</level> -->
        <!-- test1l - this tests side constraints -->
        <level>objective=mc_mean ub=ns,5 ub=vc,35000 solver=pico _value=0</level>
        <!-- test1m - this tests the sensor location file-->
        <level>objective=mc_mean ub=ns,5 solver=pico sensor-locations=../../test1-sensor-locations _value=23395.54134</level>
        <!-- test1n - this tests the fixed sensor locations file-->
        <level>objective=mc_mean ub=ns,5 solver=pico sensor-locations=../../test1-fixed-locations _value=25100.87782</level>
        <!-- test1o - this tests the valid sensor locations file-->
        <level>objective=mc_mean ub=ns,5 solver=pico sensor-locations=../../test1-valid-locations _value=95244.36599</level>
        <!-- test1p - this tests the valid sensor locations file-->
        <level>objective=mc_mean ub=ns,5 solver=heuristic _value=21781.98987</level>
        <!-- test1laa - this tests the heuristic worst -->
        <level>objective=mc_worst ub=ns,5 solver=heuristic _value=144271</level>
        <!-- test1aa_0 - basic mc_mean sparse heuristic rep. -->
        <level>objective=mc_mean ub=ns,5 solver=heuristic heuristic-representation=0 _value=21781.98987</level>
        <!-- test1aa_1 - basic mc_mean dense heuristic rep. -->
        <level>objective=mc_mean ub=ns,5 solver=heuristic heuristic-representation=1 _value=21781.98987</level>
        <!-- test1aa_2 - basic mc_mean disk heuristic rep. -->
        <level>objective=mc_mean ub=ns,5 solver=heuristic heuristic-representation=2 _value=21781.98987</level>

      </factor>
    </factors>
    <controls>
       <executable>python sp_test -generic</executable>
    </controls>
  </experiment>

  <experiment name="test1a_sa"> 
    <factors>
      <factor name="constant_options">
        <level>network=aggrtest1 --impact-dir=..</level>
      </factor>
        <!-- test1a - this basic mc_mean -->
        <level>objective=mc_mean ub=ns,5 solver=pico _value=21781.98987</level>
        <!-- test1h - this tests the ec measure and thresholding -->
        <level>objective=ec_mean ub=ns,5 threshold=ec,20000.0 solver=pico _value=3175.57923</level>

    </factors>
    <controls>
       <executable>python sp_test -generic</executable>
    </controls>
  </experiment>

  <analysis name="ExitStatus" type="validation">
    <category>validation</category>
    <data experiment="test1a"/>
    <options>_measurement="exit_status" _value=0 _cmp_operator=eq</options>
  </analysis>

  <analysis name="FinalValue" type="validation">
    <category>validation</category>
    <data experiment="test1a"/>
    <options>_measurement="Value" _cmp_operator=leq _tolerance=0.1</options>
  </analysis>

  <analysis name="ValgrindErrors" type="validation">
    <category>valgrind</category>
    <data experiment="test1a"/>
    <options>_measurement="Valgrind Errors" _value=0 _cmp_operator='leq'</options>
  </analysis>

  <analysis name="ValgrindLeaks" type="validation">
    <category>valgrind</category>
    <data experiment="test1a"/>
    <options>_measurement="Valgrind Leaks" _value=0 _cmp_operator='leq'</options>
  </analysis>

</experimental-study>
