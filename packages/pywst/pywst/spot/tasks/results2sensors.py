
import pywst.spot.core
from pyutilib.component.core import alias
import pyutilib.services


class results2sensors_Task(pywst.spot.core.Task):

    alias('pywst.spot.results2sensors')

    def __init__(self, *args, **kwds):
        pywst.spot.core.Task.__init__(self, *args, **kwds)
        #
        self.inputs.declare('results')
        self.inputs.declare('sensor_filename')
        #
        self.outputs.declare('sensor_filename')

    def execute(self):
        if self.sensor_filename is None:
            self.sensor_filename = pyutilib.services.TempfileManager.create_tempfile(suffix=".sensors")
        #
        OUTPUT = open(self.sensor_filename,'w')
        print >>OUTPUT, "#"
        print >>OUTPUT, "# Sensors file generated by the pywst.spot.results2sensor task"
        print >>OUTPUT, "#"
        for i in range(0,len(self.results.solution)):
            print >>OUTPUT, i,
            vars = self.results.solution[i].variable
            ctr = 0
            for id in vars.y:
                if vars.y[id].value == 1 and id != '_1':
                    ctr += 1
            print >>OUTPUT, ctr,
            for id in vars.y:
                if vars.y[id].value == 1 and id != '_1':
                    print >>OUTPUT, id,
            print >>OUTPUT, ""
        OUTPUT.close()
