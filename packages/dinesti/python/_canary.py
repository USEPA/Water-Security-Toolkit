# Copyright (2013) Sandia Corporation. Under the terms of Contract# DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government # retains certain rights in this software.## This software is released under the FreeBSD license as described # in License.txtimport time as Timerimport datetimeimport MySQLdbimport _guiimport _eventsimport json # Python 2.6 and laterdef runCompact():	db,cursor = _events.initializeSqlDb()	sTable = "canary"	nHorizon = 9 * 24 * 3600 # 9 days 	time = _gui.getDoc("_time?call=get&db=dinesti")	nSeconds = time.get("epoch")	sNow = str(_gui.getTimeZero() + datetime.timedelta(seconds=nSeconds))	sTime = str(_gui.getTimeZero() + datetime.timedelta(seconds=nSeconds - nHorizon))	nres = -1	if _events.tableExists(cursor, sTable):		command = "delete from " + sTable + " where time_stamp < '" + sTime + "'"		nres = cursor.execute(command)	cursor.close()	db.commit()	db.close()	return {"count": nres, "horizon_seconds": nHorizon, "time_cutoff": sTime, "time_now": sNow}def runCount():	db,cursor = _events.initializeSqlDb()	sTable = "canary"	if _events.tableExists(cursor, sTable):		command = "select * from " + sTable		nres = cursor.execute(command)	cursor.close()	db.commit()	db.close()	return {"count": nres}def run(sCall):	if sCall == "compact":		results = runCompact()		return _gui.respond(results)	#	if sCall == "count":		results = runCount()		return _gui.respond(results)	#	returndef main():	_gui.setHost()	for req in _gui.getRequests():		sDb = _gui.getQuery(req, "db")		_gui.setDatabase(sDb)		sCall = _gui.getQuery(req, "call")		bRetVal = run(sCall)		if bRetVal: continue		_gui.respond({})if __name__ == "__main__":	main()